---
- name: Desplegar app Flask en Windows con inicio automático vía tarea programada
  hosts: all
  collections:
    - ansible.windows
  become: false

  vars:
    python_installer_url: https://www.python.org/ftp/python/3.12.2/python-3.12.2-amd64.exe
    install_dir: C:\FlaskService
    python_path: 'C:\Program Files\Python312\python.exe'
    app_py_path: "{{ install_dir }}\\app.py"
    task_name: FlaskAppAutoStart

  tasks:

    - name: Crear carpeta para la app
      ansible.windows.win_file:
        path: "{{ install_dir }}"
        state: directory

    - name: Descargar instalador de Python
      ansible.windows.win_get_url:
        url: "{{ python_installer_url }}"
        dest: "{{ install_dir }}\\python-installer.exe"

    - name: Instalar Python (si no está instalado)
      ansible.windows.win_package:
        path: "{{ install_dir }}\\python-installer.exe"
        arguments: /quiet InstallAllUsers=1 PrependPath=1
        creates_path: "{{ python_path }}"

    - name: Instalar Flask con pip
      ansible.windows.win_shell: |
        & "{{ python_path }}" -m pip install flask
      args:
        creates: 'C:\Program Files\Python312\Lib\site-packages\flask'

    - name: Crear script Flask app.py
      ansible.windows.win_copy:
        dest: "{{ app_py_path }}"
        content: |
          from flask import Flask
          app = Flask(__name__)

          @app.route('/')
          def hello():
              return "¡Hola desde Flask desplegado con Ansible en Windows!"

          if __name__ == "__main__":
              app.run(host="0.0.0.0", port=8080)

    - name: Crear tarea programada para iniciar Flask al iniciar sesión
      ansible.windows.win_shell: |
        $action = New-ScheduledTaskAction -Execute '{{ python_path }}' -Argument '{{ app_py_path }}'
        $trigger = New-ScheduledTaskTrigger -AtLogOn
        $principal = New-ScheduledTaskPrincipal -UserId "SYSTEM" -RunLevel Highest
        $task = New-ScheduledTask -Action $action -Trigger $trigger -Principal $principal
        Register-ScheduledTask -TaskName '{{ task_name }}' -InputObject $task -Force
      args:
        executable: powershell.exe
