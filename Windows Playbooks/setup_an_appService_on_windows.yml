---
- name: Configurar servicio web Flask en Windows con NSSM
  hosts: all
  become: false
  vars:
    python_installer_url: https://www.python.org/ftp/python/3.12.2/python-3.12.2-amd64.exe
    nssm_zip_url: https://nssm.cc/release/nssm-2.24.zip
    install_dir: C:\FlaskService
    nssm_dir: C:\nssm
    service_name: FlaskWebService
    python_path: C:\Python312\python.exe
    app_py_path: "{{ install_dir }}\\app.py"

  tasks:

    - name: Crear carpeta de instalación
      win_file:
        path: "{{ install_dir }}"
        state: directory

    - name: Descargar Python Installer
      win_get_url:
        url: "{{ python_installer_url }}"
        dest: "{{ install_dir }}\\python-installer.exe"

    - name: Instalar Python
      win_package:
        path: "{{ install_dir }}\\python-installer.exe"
        arguments: /quiet InstallAllUsers=1 PrependPath=1
        creates_path: "{{ python_path }}"

    - name: Instalar Flask
      win_command: "{{ python_path }} -m pip install flask"
      args:
        creates: C:\Python312\Lib\site-packages\flask

    - name: Crear archivo app.py (escucha en puerto 8080)
      win_copy:
        dest: "{{ app_py_path }}"
        content: |
          from flask import Flask
          app = Flask(__name__)

          @app.route('/')
          def hello():
              return "¡Hola desde Flask ejecutándose como servicio de Windows en el puerto 8080!"

          if __name__ == "__main__":
              app.run(host="0.0.0.0", port=8080)

    - name: Descargar NSSM
      win_get_url:
        url: "{{ nssm_zip_url }}"
        dest: "{{ install_dir }}\\nssm.zip"

    - name: Extraer NSSM
      win_unzip:
        src: "{{ install_dir }}\\nssm.zip"
        dest: "{{ nssm_dir }}"
        creates: "{{ nssm_dir }}\\win64\\nssm.exe"

    - name: Crear servicio con NSSM
      win_command: >
        {{ nssm_dir }}\win64\nssm.exe install {{ service_name }}
        "{{ python_path }}"
        "{{ app_py_path }}"
      args:
        creates: "HKLM:\\SYSTEM\\CurrentControlSet\\Services\\{{ service_name }}"

    - name: Iniciar el servicio
      win_service:
        name: "{{ service_name }}"
        state: started